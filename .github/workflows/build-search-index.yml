name: Build Search Index

on:
  push:
    branches: [ main ]
    paths: [ 'md/**' ]
  pull_request:
    branches: [ main ]
    paths: [ 'md/**','docs/**','scripts/**' ]
  schedule:
    # 每天凌晨2点执行一次 (Runs at 2 AM every day)
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    # 授予 Job 推送代码的权限 (Grant the job permissions to push code)
    permissions:
      contents: write

    steps:
    # 步骤1: 检出仓库代码 (Step 1: Checkout repository code)
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # 使用 GITHUB_TOKEN 以便后续可以推送代码 (Use GITHUB_TOKEN to allow pushing code later)
        token: ${{ secrets.GITHUB_TOKEN }}
    
    # 步骤2: 设置 Node.js 环境 (Step 2: Setup Node.js environment)
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        # 根据 scripts 目录下的 lock 文件缓存依赖 (Cache dependencies based on the lock file in the scripts directory)
        cache-dependency-path: 'scripts/package-lock.json'
    
    # 步骤3: 安装依赖 (Step 3: Install dependencies)
    - name: Install dependencies
      run: |
        set -x # 开启调试模式，打印每条执行的命令 (Enable debug mode to print each command)
        echo "==> Entering 'scripts' directory..."
        cd scripts
        echo "==> Installing dependencies with 'npm ci'..."
        npm ci
    
    # 步骤4: 构建搜索索引 (Step 4: Build search index)
    - name: Build search index
      run: |
        set -x # 开启调试模式 (Enable debug mode)
        echo "==> Entering 'scripts' directory..."
        cd scripts
        echo "==> Running build script 'npm run build'..."
        npm run build
        
    # 步骤5: 查看生成的文件 (用于调试) (Step 5: Check generated files for debugging)
    - name: List generated files
      run: |
        set -x # 开启调试模式 (Enable debug mode)
        echo "==> Checking 'docs' directory contents..."
        ls -R docs
        
    # 步骤6: 部署到 GitHub Pages 分支 (Step 6: Deploy to GitHub Pages branch)
    - name: Deploy to GitHub Pages branch
      uses: peaceiris/actions-gh-pages@v4
      with:
        # 用于认证的令牌 (Token for authentication)
        github_token: ${{ secrets.GITHUB_TOKEN }}
        # 要部署的目标分支，如果不存在则会自动创建 (The target branch to deploy to, will be created if it doesn't exist)
        publish_branch: github-page-source
        # 要部署的目录，它将成为目标分支的根目录 (The directory to deploy, which will become the root of the target branch)
        publish_dir: ./docs
        # 自定义提交信息 (Custom commit message)
        commit_message: "Deploy updated docs to github-page-source [skip ci]"
